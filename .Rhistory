)
library(censusapi)
library(tidyverse)
library(tigris)
library(sf)
library(leaflet)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN",
"YBL",
"BLD",
"MV",
"AGEP"
)
)
library(censusapi)
library(tidyverse)
library(tigris)
library(sf)
library(leaflet)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN",
"YBL",
"BLD",
"MV",
"AGEP"
)
)
``
saveRDS(pums_2019_1yr, "a6_pums.rds")
# saveRDS(pums_2019_1yr, "a6_pums.rds")
pums_2019_1yr <- readRDS("a6_pums.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Fransisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <- pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area, 5, "left", "0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
sf_pums_clean <- sf_pums %>%
filter(YBL %in% as.character(1:3))
view(sf_pums)
# saveRDS(pums_2019_1yr, "a6_pums.rds")
pums_2019_1yr <- readRDS("a6_pums.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
view(ca_pumas)
view(sf_boundary)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Fransisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <- pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area, 5, "left", "0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
sf_pums_clean <- sf_pums %>%
filter(YBL %in% as.character(1:3))
view(sf_pums_clean)
view(sf_pums)
view(sf_pumas)
rsconnect::setAccountInfo(name='vvajipey',
token='926B92C41D60E49C14BB280D1397BBA7',
secret='Q/W17eU7a4SGU0GciuZ3DNllOI3qCWTE9HLbPTYB')
install.packages(rsconnect)
install.packages("rsconnect")
rsconnect::setAccountInfo(name='vvajipey',
token='926B92C41D60E49C14BB280D1397BBA7',
secret='Q/W17eU7a4SGU0GciuZ3DNllOI3qCWTE9HLbPTYB')
rsconnect::setAccountInfo(name='vvajipey',
token='926B92C41D60E49C14BB280D1397BBA7',
secret='Q/W17eU7a4SGU0GciuZ3DNllOI3qCWTE9HLbPTYB')
install.packages("flexdashboard")
setwd("~/Documents/GitHub/vivekvajipey.github.io")
library(flexdashboard)
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
pge_data_raw <- readRDS("pge_data_raw.rds")
setwd("~/Documents/GitHub/vivekvajipey.github.io")
pge_data_raw <- readRDS("pge_data_raw.rds")
ca_zips <- sctas("CA")
ca_zips <- zctas("CA")
library(tigris)
ca_zips <- zctas("CA")
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <- counties("CA") %>% filter(NAME %in% bay_county_names)
bay_zips <- ca_zips[bay_counties,]
bay_cities_within <-
ca_cities %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_cities %>% select(GEOID)) %>%
st_as_sf()
bay_zips <-
ca_zips %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_zips %>% select(GEOID)) %>%
st_as_sf()
mapview(bay_counties, fill = "white", alpha.regions = 0) + mapview(bay_cities_within, label = "NAME")
bay_zips <- readRDS("bay_zips.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
saveRDS(bay_zips, "bay_zips.rds")
bay_zips <- readRDS("bay_zips.rds")
view(pge_data_raw)
pge_20_res_elec <-
pge_data_raw %>%
filter(
CUSTOMERCLASS == "Elec- Residential",
YEAR == 2020
) %>%
mutate(
ZIPCODE = ZIPCODE %>% as.character()
) %>%
group_by(ZIPCODE) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
right_join(
bay_zips %>% select(GEOID10),
by = c("ZIPCODE" = "GEOID10")
) %>%
st_as_sf() %>%
st_transform(4326)
res_pal <- colorNumeric(
palette = "Reds",
domain =
pge_20_res_elec$TOTALKBTU
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_20_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_20_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
title = "Total Residential<br>Electricity (kBTU), 2020"
)
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == 2020
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
title = "Residential Energy Consumption in the Bay Area, 2020",
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
pge_20_res_elec <-
pge_data_raw %>%
filter(
CUSTOMERCLASS == "Elec- Residential",
YEAR == 2020
) %>%
mutate(
ZIPCODE = ZIPCODE %>% as.character()
) %>%
group_by(ZIPCODE) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
right_join(
bay_zips %>% select(GEOID10),
by = c("ZIPCODE" = "GEOID10")
) %>%
st_as_sf() %>%
st_transform(4326)
res_pal <- colorNumeric(
palette = "Reds",
domain =
pge_20_res_elec$TOTALKBTU
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_20_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_20_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
title = "Total Residential<br>Electricity (kBTU), 2020"
)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == 2020
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
title = "Residential Energy Consumption in the Bay Area, 2020",
color = "Year"
) +
theme(legend.position = "none")
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == 2020
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
title = "Residential Energy Consumption in the Bay Area, 2020",
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
pge_20_res_elec <-
pge_data_raw %>%
filter(
CUSTOMERCLASS == "Elec- Residential",
YEAR == 2020
) %>%
mutate(
ZIPCODE = ZIPCODE %>% as.character()
) %>%
group_by(ZIPCODE) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
right_join(
bay_zips %>% select(GEOID10),
by = c("ZIPCODE" = "GEOID10")
) %>%
st_as_sf() %>%
st_transform(4326)
res_pal <- colorNumeric(
palette = "Reds",
domain =
pge_20_res_elec$TOTALKBTU
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_20_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_20_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
title = "Total Residential<br>Electricity (kBTU), 2020"
)

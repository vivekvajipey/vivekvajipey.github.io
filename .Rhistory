sum()) /
(epa_income_housing_perc_total %>%
pull(estimate) %>%
sum()) * 100
# overall % of owner-occupied units
(epa_income_housing_perc_total %>%
filter(type == "owner") %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
pull(estimate) %>%
sum()) * 100
# what % of severely burdened households are renter households?
(epa_income_housing_perc_total %>%
filter((housing_perc == "50.0 percent or more") & (type == "renter")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(housing_perc == "50.0 percent or more") %>%
pull(estimate) %>%
sum()) * 100
```{r}
# what % of severely burdened households are renter households?
(epa_income_housing_perc_total %>%
filter((housing_perc == "50.0 percent or more") & (type == "renter")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(housing_perc == "50.0 percent or more") %>%
pull(estimate) %>%
sum()) * 100
# what % of severely burdened households are owner households?
(epa_income_housing_perc_total %>%
filter((housing_perc == "50.0 percent or more") & (type == "owner")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(housing_perc == "50.0 percent or more") %>%
pull(estimate) %>%
sum()) * 100
# of households in highest income bracket that is mild burdened
(epa_income_housing_perc_total %>%
filter((burden_level == "Mild: Housing costs are under 30% of income") & (income == "$100,000 or more:")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(income == "$100,000 or more:") %>%
pull(estimate) %>%
sum()) * 100
# of households in lowest income bracket that is moderately burdened
(epa_income_housing_perc_total %>%
filter((burden_level == "Moderate: Housing costs are between 30 and 50% of income") & (income == "Less than $10,000:")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(income == "Less than $10,000:") %>%
pull(estimate) %>%
sum()) * 100
# of households in lowest income bracket that is moderately burdened
(epa_income_housing_perc_total %>%
filter((burden_level == "Moderate: Housing costs are between 30 and 50% of income") & (income == "$10,000 to $19,999:")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(income == "Less than $10,000:") %>%
pull(estimate) %>%
sum()) * 100
# of households in lowest income bracket that is moderately burdened
(epa_income_housing_perc_total %>%
filter((burden_level == "Moderate: Housing costs are between 30 and 50% of income") & (income == "$20,000 to $34,999:")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(income == "Less than $10,000:") %>%
pull(estimate) %>%
sum()) * 100
# of households in lowest income bracket that is moderately burdened
(epa_income_housing_perc_total %>%
filter((burden_level == "Moderate: Housing costs are between 30 and 50% of income") & (income == "$10,000 to $19,999:")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(income == "$10,000 to $19,999:") %>%
pull(estimate) %>%
sum()) * 100
# of households in lowest income bracket that is moderately burdened
(epa_income_housing_perc_total %>%
filter((burden_level == "Moderate: Housing costs are between 30 and 50% of income") & (income == "$20,000 to $34,999:")) %>%
pull(estimate) %>%
sum()) /
(epa_income_housing_perc_total %>%
filter(income == "$20,000 to $34,999:") %>%
pull(estimate) %>%
sum()) * 100
smc_blockgroups <- block_groups("CA", "San Mateo", cb = T, progress_bar = F)
burdened_pal <- colorNumeric(
palette = "Oranges",
domain =
epa_burdened_cbgs$percent_burdened
)
burdened_pal <- colorNumeric(
palette = "Oranges",
domain =
epa_burdened_cbgs$percent_burdened
)
epa_severely_burdened_cbgs <-
epa_income_rent_perc %>%
mutate(
severely_burdened = ifelse(
rent_perc == "50.0 percent or more",
estimate,
NA
)
) %>%
group_by(`census block group`) %>%
summarize(
severely_burdened = sum(severely_burdened, na.rm = T),
total_pop = sum(estimate, na.rm = T)
) %>%
mutate(
percent_severely_burdened = severely_burdened/total_pop*100
) %>%
filter(!is.na(percent_severely_burdened))
epa_tracts <- c("611900", "612000", "611800")
epa_income_rent_perc <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = "state:06+county:081",
vars = "group(B25074)"
) %>%
filter(
tract %in% epa_tracts
) %>%
mutate(
`census block group` =
paste0(state,county,tract,block_group)
) %>%
select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
label,
into = c(NA,NA,"income","rent_perc"),
sep = "!!"
) %>%
filter(!is.na(rent_perc))
burden_threshold <- 0.3
epa_burdened_cbgs <-
epa_income_rent_perc %>%
mutate(
burdened = ifelse(
rent_perc %in% burdened_perc,
estimate,
NA
),
burden = ifelse(
rent_perc %in% burdened_perc,
ifelse(
burdened_perc == "50.0 percent or more",
"severe",
"moderate"
),
"mild"
)
) %>%
group_by(`census block group`) %>%
summarize(
burdened = sum(burdened, na.rm = T),
total_pop = sum(estimate, na.rm = T)
) %>%
mutate(
percent_burdened = burdened/total_pop*100
) %>%
filter(!is.na(percent_burdened))
epa_severely_burdened_cbgs <-
epa_income_rent_perc %>%
mutate(
severely_burdened = ifelse(
rent_perc == "50.0 percent or more",
estimate,
NA
)
) %>%
group_by(`census block group`) %>%
summarize(
severely_burdened = sum(severely_burdened, na.rm = T),
total_pop = sum(estimate, na.rm = T)
) %>%
mutate(
percent_severely_burdened = severely_burdened/total_pop*100
) %>%
filter(!is.na(percent_severely_burdened))
smc_blockgroups <- block_groups("CA", "San Mateo", cb = T, progress_bar = F)
burdened_pal <- colorNumeric(
palette = "Oranges",
domain =
epa_burdened_cbgs$percent_burdened
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
epa_burdened_cbgs %>%
left_join(
smc_blockgroups %>% select(GEOID),
by = c(`census block group` = "GEOID")
) %>%
st_as_sf(),
fillColor = ~burdened_pal(percent_burdened),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(percent_burdened),
"% paying more than 30% of income on rent in census block group ",
`census block group`
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = epa_burdened_cbgs,
pal = burdened_pal,
values = ~percent_burdened,
title = "Burdened Renter Households in East Palo Alto"
)
smc_blockgroups <- block_groups("CA", "San Mateo", cb = T, progress_bar = F)
burdened_pal <- colorNumeric(
palette = "Oranges",
domain =
epa_burdened_cbgs$percent_burdened
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
epa_burdened_cbgs %>%
left_join(
smc_blockgroups %>% select(GEOID),
by = c(`census block group` = "GEOID")
) %>%
st_as_sf(),
fillColor = ~burdened_pal(percent_burdened),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(percent_burdened),
"% paying more than 30% of income on rent in census block group ",
`census block group`
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = epa_burdened_cbgs,
pal = burdened_pal,
values = ~percent_burdened,
title = "Burdened Renter Households in East Palo Alto"
)
smc_blockgroups <- block_groups("CA", "San Mateo", cb = T, progress_bar = F)
burdened_pal <- colorNumeric(
palette = "Oranges",
domain =
epa_burdened_cbgs$percent_burdened
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
epa_burdened_cbgs %>%
left_join(
smc_blockgroups %>% select(GEOID),
by = c(`census block group` = "GEOID")
) %>%
st_as_sf(),
fillColor = ~burdened_pal(percent_burdened),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(percent_burdened),
"% paying more than 30% of income on rent in census block group ",
`census block group`
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = epa_burdened_cbgs,
pal = burdened_pal,
values = ~percent_burdened,
title = "Burdened Renter Households in East Palo Alto"
)
severely_burdened_pal <- colorNumeric(
palette = "Reds",
domain =
epa_severely_burdened_cbgs$percent_severely_burdened
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
epa_severely_burdened_cbgs %>%
left_join(
smc_blockgroups %>% select(GEOID),
by = c(`census block group` = "GEOID")
) %>%
st_as_sf(),
fillColor = ~severely_burdened_pal(percent_severely_burdened),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(percent_severely_burdened),
"% paying more than 50% of income on rent in census block group ",
`census block group`
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = epa_severely_burdened_cbgs,
pal = severely_burdened_pal,
values = ~percent_severely_burdened,
title = "Severely Burdened Renter Households in East Palo Alto"
)
severely_burdened_pal <- colorNumeric(
palette = "Reds",
domain =
epa_severely_burdened_cbgs$percent_severely_burdened
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
epa_severely_burdened_cbgs %>%
left_join(
smc_blockgroups %>% select(GEOID),
by = c(`census block group` = "GEOID")
) %>%
st_as_sf(),
fillColor = ~severely_burdened_pal(percent_severely_burdened),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(percent_severely_burdened),
"% paying more than 50% of income on rent in census block group ",
`census block group`
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = epa_severely_burdened_cbgs,
pal = severely_burdened_pal,
values = ~percent_severely_burdened,
title = "Severely Burdened Renter Households in East Palo Alto"
)
View(epa_burdened_cbgs)
View(epa_severely_burdened_cbgs)
View(epa_income_rent_perc)
##Finding the change in price indexes before and after in DC
DCHousingPriceIndexesClean <- DCHousingPriceIndexes %>%
filter(endsWith(DATE,"01-01")) %>%
mutate(DATE = as.Date(DATE, format = "%Y-%m-%d")) %>%
rename(Date = DATE, Index = ATNHPIUS47894Q
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(leaflet)
library(mapboxapi)
mb_access_token("pk.eyJ1IjoidnZhamlwZXkiLCJhIjoiY2t5dWxpN2xuMW9yYjJubnVrY2trdGF4ZCJ9.v4iJv_62J6JLt2rHxP-QTQ", install = T, overwrite = TRUE)
san_ram_isochrones <- c("walking","driving") %>%
map_dfr(function(x){
mb_isochrone(
san_ram_blocks,
profile = x,
time = c(5,10,15)
) %>%
mutate(mode = x)
})
san_ram_blocks <- cc_blocks %>%
st_centroid() %>%
.[san_ram_boundary, ] %>%
st_drop_geometry() %>%
left_join(cc_blocks %>% select(GEOID10)) %>%
st_as_sf()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(leaflet)
library(mapboxapi)
mb_access_token("pk.eyJ1IjoidnZhamlwZXkiLCJhIjoiY2t5dWxpN2xuMW9yYjJubnVrY2trdGF4ZCJ9.v4iJv_62J6JLt2rHxP-QTQ", install = T, overwrite = TRUE)
path <- "/Volumes/GoogleDrive/Shared drives/SFBI/Data Library/NHTS/nhts17-caltrans-tsdc-download/"
pois <- st_read("/Volumes/GoogleDrive/Shared drives/SFBI/Data Library/OSM/gis_osm_pois_a_free_1.shp")
pois_summary <- pois %>%
st_drop_geometry() %>%
group_by(fclass) %>%
count() %>%
arrange(desc(n))
pois_summary
cc_boundary <- counties("CA") %>%
filter(NAME == "Contra Costa") %>%
st_transform(st_crs(pois))
# will take longer but handles larger POIs better
cc_pois <- pois %>%
.[cc_boundary,] %>%
rename(amenity = fclass)
mapview(cc_pois, zcol = "amenity")
pois_filter <- pois %>%
rename(amenity = fclass) %>%
filter(amenity %in% c(
"supermarket",
"convenience",
"restaurant",
"school",
"park",
"hospital",
"doctors",
"dentist",
"library",
"sports_centre",
"swimming_pool",
"pharmacy"
))
mapview(pois_filter, zcol = "amenity")
saveRDS(pois_filter, "pois_filter.rds")
pois_filter <- readRDS("pois_filter.rds")
cc_blocks <- blocks("CA","Contra Costa")
san_ram_boundary <- places("CA") %>%
filter(NAME == "San Ramon")
san_ram_blocks <- cc_blocks %>%
st_centroid() %>%
.[san_ram_boundary, ] %>%
st_drop_geometry() %>%
left_join(cc_blocks %>% select(GEOID10)) %>%
st_as_sf()
mapview(san_ram_blocks)
saveRDS(san_ram_blocks, "san_ram_blocks.rds")
san_ram_blocks <- readRDS("san_ram_blocks.rds")
san_ram_isochrones <- c("walking","driving") %>%
map_dfr(function(x){
mb_isochrone(
san_ram_blocks,
profile = x,
time = c(5,10,15)
) %>%
mutate(mode = x)
})
saveRDS(san_ram_isochrones, "san_ram_isochrones.rds")
san_ram_isochrones <- readRDS("san_ram_isochrones.rds")
san_ram_access_raw <- san_ram_isochrones %>%
st_make_valid() %>%
st_join(pois_filter) %>%
filter(!is.na(osm_id)) %>%
st_drop_geometry()
ca_od_read <- read_csv("/Volumes/GoogleDrive/Shared drives/SFBI/Data Library/LODES/ca_od_main_JT01_2019.csv.gz")
ca_od_read <- read_csv("/Volumes/GoogleDrive/Shared drives/SFBI/Data Library/LODES/ca_od_main_JT01_2019.csv.gz")
install.packages("raster")
library(raster)
install.packages("raster")
setwd("~/Documents/GitHub/vivekvajipey.github.io")
Sys.setenv(CENSUS_KEY="67343486046933b2d74f13923ac153228348f817")
mb_access_token("pk.eyJ1IjoiYnJpYW5hbWFybyIsImEiOiJja3l1bm1memExcHE1MnF0OHp2ODV6MGN1In0.8fAzGLv5OQahCJuKM6p9vg", install = T, overwrite = TRUE)
library(leaflet)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(leaflet)
library(mapboxapi)
library(tidycensus)
Sys.setenv(CENSUS_KEY="67343486046933b2d74f13923ac153228348f817")
mb_access_token("pk.eyJ1IjoiYnJpYW5hbWFybyIsImEiOiJja3l1bm1memExcHE1MnF0OHp2ODV6MGN1In0.8fAzGLv5OQahCJuKM6p9vg", install = T, overwrite = TRUE)
library(raster)

) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
pop_density_pal <- colorNumeric(
palette = "Greens",
domain =
berk_pop_density_nonwhite$pop_density_change
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
knitr::opts_chunk$set(echo = F, warnings = F, messages = F)
library(tidyverse)
library(sf)
library(tigris)
library(mapview)
library(leaflet)
Sys.setenv(CENSUS_KEY="67343486046933b2d74f13923ac153228348f817")
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
pop_density_pal <- colorNumeric(
palette = "RdBu",
domain =
berk_pop_density_nonwhite$pop_density_change
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
pop_density_pal <- colorNumeric(
palette = "RdBu",
domain =
berk_pop_density_nonwhite$pop_density_change
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
pop_density_pal <- colorNumeric(
palette = "Greens",
domain =
berk_pop_density_nonwhite$pop_density_change
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
```{r}
pop_density_pal <- colorNumeric(
palette = "Greens",
domain =
berk_pop_density_nonwhite$pop_density_change
)
pop_density_pal <- colorNumeric(
palette = "Greens",
domain =
berk_pop_density_nonwhite$pop_density_change
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
pop_density_pal <- colorNumeric(
palette = "RdBu",
domain =
berk_pop_density_nonwhite$pop_density_change
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA"
)
view(berk_pop_density_nonwhite)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data =
berk_pop_density_nonwhite %>%
st_as_sf(),
fillColor = ~pop_density_pal(pop_density_change),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1,
label = ~paste0(
round(pop_density_change),
ifelse(
round(pop_density_change) == 1,
" person per acre",
" people per acre"
)
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = berk_pop_density_nonwhite,
pal = pop_density_pal,
values = ~pop_density_change,
title = "Absolute Change in Non-White Population Density of Berkeley, CA between 2010 and 2020"
)
view(berk_pop_race_2010)
view(berk_pop_race_2020)
knitr::opts_chunk$set(echo = F, warnings = F, messages = F)
library(tidyverse)
library(sf)
library(tigris)
library(mapview)
library(leaflet)
Sys.setenv(CENSUS_KEY="67343486046933b2d74f13923ac153228348f817")
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
berkeley_tracts <- c(421300, 421200, 421100, 421500, 421400, 421600, 421700, 421800, 421900, 422000, 422100, 422200, 422300, 422400, 422500, 422600, 422700, 422800, 422900, 423000, 423100, 423200, 423300, 423400, 423500, 423601, 423602, 423700, 423800, 423902, 423901, 424001, 424002)
alameda_cbgs <- block_groups("CA", "Alameda", cb = T, progress_bar = F)
berkeley_cbgs <-
alameda_cbgs %>%
filter(
TRACTCE %in% berkeley_tracts
) %>%
mutate(
land_acres = ALAND * 0.000247105
) %>%
mutate(
block =
paste0(STATEFP,COUNTYFP,TRACTCE,BLKGRPCE)
) %>%
select(!c(STATEFP,COUNTYFP,TRACTCE,BLKGRPCE, LSAD, ALAND, AWATER))
dec_vars_2020 <-
listCensusMetadata(
name = "2020/dec/pl",
type = "variables"
)
berk_pop_race_2020 <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:001",
vars = "group(P1)"
) %>%
filter(
tract %in% berkeley_tracts
) %>%
mutate(
block =
paste0(state,county,tract,block)
) %>%
select(!c(GEO_ID,state,county,tract,NAME) & !ends_with(c("NA"))) %>%
pivot_longer(
ends_with("N"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
dec_vars_2020 %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"category1","category2"),
sep = "!!"
)
dec_vars_2010 <-
listCensusMetadata(
name = "2010/dec/pl",
type = "variables"
)
berk_pop_race_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:001",
vars = "group(P1)"
) %>%
filter(
tract %in% berkeley_tracts
) %>%
mutate(
block =
paste0(state, county, tract, block)
) %>%
select(!c(GEO_ID,state,county,tract,NAME)) %>%
pivot_longer(
starts_with("P"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
dec_vars_2010 %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"category1","category2"),
sep = "!!"
)
unique(berk_pop_race_2010$category1)
berk_pop_race_2010 <-
berk_pop_race_2010 %>%
mutate(
race = case_when(
# category1 == "White alone" & is.na(category2) ~ "White alone",
category1 == "Black or African American alone" & is.na(category2) ~ "Black or African American alone",
category1 == "American Indian and Alaska Native alone" & is.na(category2) ~ "American Indian and Alaska Native alone",
category1 == "Asian alone" & is.na(category2) ~ "Asian alone",
category1 == "Native Hawaiian and Other Pacific Islander alone" & is.na(category2) ~ "Native Hawaiian and Other Pacific Islander alone",
category1 == "Some Other Race alone" & is.na(category2) ~ "Some Other Race alone",
category1 == "Population of two races" & is.na(category2) ~ "Population of two races",
category1 == "Population of three races" & is.na(category2) ~ "Population of three races",
category1 == "Population of four races" & is.na(category2) ~ "Population of four races",
category1 == "Population of five races" & is.na(category2) ~ "Population of five races",
category1 == "Population of six races" & is.na(category2) ~ "Population of six races",
TRUE ~ ""
)
)
berk_pop_race_2010 <- berk_pop_race_2010 %>%
filter(category1 != "White alone") %>%
filter(race != "") %>%
select(block, race, pop = estimate)
sorted_berk_pop_nonwhite_2010 <- berk_pop_race_2010[order(berk_pop_race_2010$block, berk_pop_race_2010$race), ]
sorted_berk_pop_nonwhite_2020 <- berk_pop_race_2020[order(berk_pop_race_2020$block, berk_pop_race_2020$race), ]
sorted_berk_pop_nonwhite_2010 <- berk_pop_race_2010[order(berk_pop_race_2010$block, berk_pop_race_2010$race), ]
sorted_berk_pop_nonwhite_2020 <- berk_pop_race_2020[order(berk_pop_race_2020$block, berk_pop_race_2020$race), ]
sorted_berk_pop_nonwhite_2010 <- berk_pop_race_2010[order(berk_pop_race_2010$block, berk_pop_race_2010$race), ]
sorted_berk_pop_nonwhite_2020 <- berk_pop_race_2020[order(berk_pop_race_2020$block, berk_pop_race_2020$race), ]
berk_pop_race_2010 <-
berk_pop_race_2010 %>%
mutate(
race = case_when(
# category1 == "White alone" & is.na(category2) ~ "White alone",
category1 == "Black or African American alone" & is.na(category2) ~ "Black or African American alone",
category1 == "American Indian and Alaska Native alone" & is.na(category2) ~ "American Indian and Alaska Native alone",
category1 == "Asian alone" & is.na(category2) ~ "Asian alone",
category1 == "Native Hawaiian and Other Pacific Islander alone" & is.na(category2) ~ "Native Hawaiian and Other Pacific Islander alone",
category1 == "Some Other Race alone" & is.na(category2) ~ "Some Other Race alone",
category1 == "Population of two races" & is.na(category2) ~ "Population of two races",
category1 == "Population of three races" & is.na(category2) ~ "Population of three races",
category1 == "Population of four races" & is.na(category2) ~ "Population of four races",
category1 == "Population of five races" & is.na(category2) ~ "Population of five races",
category1 == "Population of six races" & is.na(category2) ~ "Population of six races",
TRUE ~ ""
)
)
berk_pop_race_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:001",
vars = "group(P1)"
) %>%
filter(
tract %in% berkeley_tracts
) %>%
mutate(
block =
paste0(state, county, tract, block)
) %>%
select(!c(GEO_ID,state,county,tract,NAME)) %>%
pivot_longer(
starts_with("P"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
dec_vars_2010 %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"category1","category2"),
sep = "!!"
)
